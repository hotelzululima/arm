# Snippets from common log messages
# These are static bits of log messages, used to determine when entries with
# dynamic content (hostnames, numbers, etc) are the same. If this matches the
# start of both messages then the entries are flagged as duplicates. If the
# entry begins with an asterisk (*) then it checks if the substrings exist
# anywhere in the messages.
# 
# Examples for the complete messages:
# [BW] READ: 0, WRITTEN: 0
# [DEBUG] connection_handle_write(): After TLS write of 512: 0 read, 586 written
# [DEBUG] flush_chunk_tls(): flushed 512 bytes, 0 ready to flush, 0 remain.
# [DEBUG] conn_read_callback(): socket 7 wants to read.
# [DEBUG] conn_write_callback(): socket 51 wants to write.
# [DEBUG] connection_remove(): removing socket -1 (type OR), n_conns now 50
# [DEBUG] connection_or_process_cells_from_inbuf(): 7: starting, inbuf_datalen
#         0 (0 pending in tls object).
# [DEBUG] connection_read_to_buf(): 38: starting, inbuf_datalen 0 (0 pending in
#         tls object). at_most 12800.
# [DEBUG] connection_read_to_buf(): TLS connection closed on read. Closing.
#         (Nickname moria1, address 128.31.0.34)
# [INFO] run_connection_housekeeping(): Expiring non-open OR connection to fd
#        16 (79.193.61.171:443).
# [INFO] rep_hist_downrate_old_runs(): Discounting all old stability info by a
#        factor of 0.950000
# [NOTICE] We stalled too much while trying to write 150 bytes to address
#          [scrubbed].  If this happens a lot, either something is wrong with
#          your network connection, or something is wrong with theirs. (fd 238,
#          type Directory, state 1, marked at main.c:702).
# [NOTICE] I learned some more directory information, but not enough to build a
#          circuit: We have only 469/2027 usable descriptors.
# [NOTICE] Attempt by %s to open a stream from unknown relay. Closing.
# [WARN] You specified a server "Amunet8" by name, but this name is not
#        registered
# [WARN] I have no descriptor for the router named "Amunet8" in my declared
#        family; I'll use the nickname as is, but this   may confuse clients.
# [WARN] Problem bootstrapping. Stuck at 80%: Connecting to the Tor network.
#        (Network is unreachable; NOROUTE; count 47;    recommendation warn)
# [WARN] 4 unknown, 1 missing key, 3 good, 0 bad, 1 no signature, 4 required
# [ARM_DEBUG] refresh rate: 0.001 seconds
# [ARM_DEBUG] system call: ps -p 2354 -o %cpu,rss,%mem,etime (runtime: 0.02)
# [ARM_DEBUG] system call: netstat -npt | grep 2354/tor (runtime: 0.02)
# [ARM_DEBUG] recreating panel 'graph' with the dimensions of 14/124
# [ARM_DEBUG] redrawing the log panel with the corrected content height (estimat was off by 4)
# [ARM_DEBUG] GETINFO accounting/bytes-left (runtime: 0.0006)

msg.BW READ:
msg.DEBUG connection_handle_write(): After TLS write of
msg.DEBUG flush_chunk_tls(): flushed
msg.DEBUG conn_read_callback(): socket
msg.DEBUG conn_write_callback(): socket
msg.DEBUG connection_remove(): removing socket
msg.DEBUG connection_or_process_cells_from_inbuf():
msg.DEBUG *pending in tls object). at_most
msg.DEBUG connection_read_to_buf(): TLS connection closed on read. Closing.
msg.INFO run_connection_housekeeping(): Expiring
msg.INFO rep_hist_downrate_old_runs(): Discounting all old stability info by a factor of
msg.NOTICE We stalled too much while trying to write
msg.NOTICE I learned some more directory information, but not enough to build a circuit
msg.NOTICE Attempt by
msg.WARN You specified a server
msg.WARN I have no descriptor for the router named
msg.WARN Problem bootstrapping. Stuck at
msg.WARN *missing key,
msg.ARM_DEBUG refresh rate:
msg.ARM_DEBUG system call: ps
msg.ARM_DEBUG system call: netstat
msg.ARM_DEBUG recreating panel '
msg.ARM_DEBUG redrawing the log panel with the corrected content height (
msg.ARM_DEBUG GETINFO accounting/bytes
msg.ARM_DEBUG GETINFO accounting/bytes-left
msg.ARM_DEBUG GETINFO accounting/interval-end
msg.ARM_DEBUG GETINFO accounting/hibernating

# some config options are fetched via special values
torrc.map HiddenServiceDir => HiddenServiceOptions
torrc.map HiddenServicePort => HiddenServiceOptions
torrc.map HiddenServiceVersion => HiddenServiceOptions
torrc.map HiddenServiceAuthorizeClient => HiddenServiceOptions
torrc.map HiddenServiceOptions => HiddenServiceOptions

# torrc parameters that can be defined multiple times without overwriting
# from src/or/config.c (entries with LINELIST or LINELIST_S)
# last updated for tor version 0.2.1.19
torrc.multiline AlternateBridgeAuthority
torrc.multiline AlternateDirAuthority
torrc.multiline AlternateHSAuthority
torrc.multiline AuthDirBadDir
torrc.multiline AuthDirBadExit
torrc.multiline AuthDirInvalid
torrc.multiline AuthDirReject
torrc.multiline Bridge
torrc.multiline ControlListenAddress
torrc.multiline ControlSocket
torrc.multiline DirListenAddress
torrc.multiline DirPolicy
torrc.multiline DirServer
torrc.multiline DNSListenAddress
torrc.multiline ExitPolicy
torrc.multiline HashedControlPassword
torrc.multiline HiddenServiceDir
torrc.multiline HiddenServiceOptions
torrc.multiline HiddenServicePort
torrc.multiline HiddenServiceVersion
torrc.multiline HiddenServiceAuthorizeClient
torrc.multiline HidServAuth
torrc.multiline Log
torrc.multiline MapAddress
torrc.multiline NatdListenAddress
torrc.multiline NodeFamily
torrc.multiline ORListenAddress
torrc.multiline ReachableAddresses
torrc.multiline ReachableDirAddresses
torrc.multiline ReachableORAddresses
torrc.multiline RecommendedVersions
torrc.multiline RecommendedClientVersions
torrc.multiline RecommendedServerVersions
torrc.multiline SocksListenAddress
torrc.multiline SocksPolicy
torrc.multiline TransListenAddress
torrc.multiline __HashedControlSessionPassword

# valid torrc aliases from the _option_abbrevs struct of src/or/config.c
# These couldn't be requested via GETCONF (in 0.2.1.19), but I think this has
# been fixed. Discussion is in:
# https://trac.torproject.org/projects/tor/ticket/1802
# 
# TODO: This workaround should be dropped after a few releases.
torrc.alias l => Log
torrc.alias AllowUnverifiedNodes => AllowInvalidNodes
torrc.alias AutomapHostSuffixes => AutomapHostsSuffixes
torrc.alias AutomapHostOnResolve => AutomapHostsOnResolve
torrc.alias BandwidthRateBytes => BandwidthRate
torrc.alias BandwidthBurstBytes => BandwidthBurst
torrc.alias DirFetchPostPeriod => StatusFetchPeriod
torrc.alias MaxConn => ConnLimit
torrc.alias ORBindAddress => ORListenAddress
torrc.alias DirBindAddress => DirListenAddress
torrc.alias SocksBindAddress => SocksListenAddress
torrc.alias UseHelperNodes => UseEntryGuards
torrc.alias NumHelperNodes => NumEntryGuards
torrc.alias UseEntryNodes => UseEntryGuards
torrc.alias NumEntryNodes => NumEntryGuards
torrc.alias ResolvConf => ServerDNSResolvConfFile
torrc.alias SearchDomains => ServerDNSSearchDomains
torrc.alias ServerDNSAllowBrokenResolvConf => ServerDNSAllowBrokenConfig
torrc.alias PreferTunnelledDirConns => PreferTunneledDirConns
torrc.alias BridgeAuthoritativeDirectory => BridgeAuthoritativeDir
torrc.alias StrictEntryNodes => StrictNodes
torrc.alias StrictExitNodes => StrictNodes

# using the following entry is problematic, despite being among the
# __option_abbrevs mappings
#torrc.alias HashedControlPassword => __HashedControlSessionPassword

# size and time modifiers allowed by config.c
torrc.label.size.b b, byte, bytes
torrc.label.size.kb kb, kbyte, kbytes, kilobyte, kilobytes
torrc.label.size.mb m, mb, mbyte, mbytes, megabyte, megabytes
torrc.label.size.gb gb, gbyte, gbytes, gigabyte, gigabytes
torrc.label.size.tb tb, terabyte, terabytes
torrc.label.time.sec second, seconds
torrc.label.time.min minute, minutes
torrc.label.time.hour hour, hours
torrc.label.time.day day, days
torrc.label.time.week week, weeks

