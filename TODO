TODO

- Bugs
	* Mac OSX and BSD have issues with netstat options
			Reported that they aren't cross platform. Possibly use lsof as a 
			fallback if an issue's detected.
			notify John Case <case@sdf.lonestar.org>
			caught by Christopher Davis
	* torrc validation bug reported (appears to be os specific)
			Reported instances were with Gentoo, OpenSuse, and OpenBSD. Change should be in:
			interface/confPanel.py lines 104-130
			setting up a Gentoo vm proved to be an absurd pain in the ass so gonna
			try repro in OpenSuse instead.
	* torrc validation doesn't catch if parameters are missing
	* revise multikey sort of connections
			Currently using a pretty ugly hack. Look at:
			http://www.velocityreviews.com/forums/
				t356461-sorting-a-list-of-objects-by-multiple-attributes.html
			and check for performance difference.
	* header panel isn't properly detecting catch-all exit policies
			Missing edge cases
	* avoid hostname lookups of private connections
			Stripped most of them but suspect there might be others (have assertions
			check for this in a debug mode?)
	* exit policy checks aren't handling all inputs
			Still need to handle masks, private keyword, and prepended policy,
			currently erroring on the side of caution.
	* not catching events unexpected by arm
			Future tor and TorCtl revisions could provide new events - these should
			be given the "UNKNOWN" type.
	* regex fails for multiline log entries
	* when logging no events still showing brackets
	* quitting can hang several seconds when there's hostnames left to resolve
			Not sure how to address this - problem is that the calls to 'host' can 
			take a while to time out. Might need another thread to kill the calls?
			Or forcefully terminate thread if it's taking too long (might be noisy)?

- Features / Site
	* rewrite codebase
			Currently the interface is a bit of a rat's nest (especially the
			controller). The goal is to use better modularization to both simplify
			the codebase and make it possible to use smarter caching to improve
			performance (far too much is done in the ui logic). This work is in
			progress, having started with the initialization (/init) and now
			concerning the utilities (/util). Migrating the following to util:
				- os calls (to provide transparent platform independence)
				- torrc validation
				- arm logging (static interface with listener design)
				- wrapper for tor connection, state, and data parsing (abstracting
					TorCtl connection should allow for arm to be resumed if tor restarts)
	* provide performance ARM-DEBUG events
			Help with diagnosing performance bottlenecks. This is pending the
			codebase revisions to figure out the low hanging fruit for caching.
	* condense tor/arm log listing types if they're the same
			Ie, make default "TOR/ARM NOTICE - ERR"
	* graph for arm cpu/mem usage
			Trivial to implement but not sure if this would be helpful.
	* startup option to restrict resource usage or set refresh rate
	* audit tor connections
			Provide warnings if tor misbehaves, checks possibly including:
				- ensuring ExitPolicyRejectPrivate is being obeyed
				- check that ExitPolicy violations don't occure (not possible yet since
					not all relays aren't identified)
				- check that all connections are properly related to a circuit, for
					instance no outbound connections without a corresponding inbound (not
					possible yet due to being unable to correlate connections to circuts)
	* abstract away netstat calls
			In preparation for drop in replacement of lsof or calls to tor's
			GETINFO.
	* add page that allows raw control port access
			Piggyback on the arm connection, providing something like an interactive
			prompt. In addition, provide:
				- irc like help (ex "/help GETINFO" could provide a summary of getinfo
				commands, partly using the results from "GETINFO info/names")
				- tab completion and up/down populates previous entries
				- warn and get confirmation if command would disrupt arm (for instance
				'SETEVENTS')
				- 'guard' option that restricts to GETINFO only	(start with this)
				- issue sighup reset
	* provide observed bandwidth
			Newer relays have a 'w' entry that states the bandwidth and old versions
			have client side measurements (third argument in 'Bandwidth' of
			descriptor, note that it's in KB/s). Label the former (server side) as 
			'Measured' and later (client side) as 'Observed' to differentiate.
			requested by arma
	* show advertised bandwidth
			if set and there's extra room available show 'MaxAdvertisedBandwidth'
	* check family connections to see if they're alive (VERSION cell handshake?)
	* update site's screenshots (pretty out of date...)
	* look into providing UPnP support
			This might be provided by tor itself so wait and see...

- Ideas (low priority)
	* python 3 compatability
			Currently blocked on TorCtl support.
	* bundle script that dumps relay stats to stdout
			Django has a small terminal coloring module that could be nice for
			formatting. Could possibly include:
				- desc / ns information for our relay
				- ps / netstat stats like load, uptime, and connection counts, etc
			derived from an idea by StrangeCharm
	* show qos stats
			Take a look at 'linux-tor-prio.sh' to see if any of the stats are 
			available and interesting.
	* localization
			Abstract strings from code and provide on translation portal. Thus far
			there hasn't been any requests for this.
	* provide option for a consensus page
			Shows full consensus with an interface similar to the connection panel.
			For this Mike's ConsensusTracker would be helpful (though boost the
			startup time by several seconds)
	* provide Debian repository for arm
			Look into debian packaging, note system call dependencies, and mail
			submit@bugs.debian.org with subject "RFP: arm" and starting with a line
			"Package: wnpp".
			requested by helmut
	* follow up on control-spec proposal
			Proposal and related information is available at:
			http://www.atagar.com/arm/controlSpecProposal.txt
			
			Unfortunatley this doesn't seem to be going anywhere so mothballed for
			now.

